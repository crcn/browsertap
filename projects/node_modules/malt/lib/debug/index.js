var models = require('./models'),
Schema = require('./schema'),
modifiers = require('./modifiers');

models.Item = require('./models/item');
models.Collection = require('./models/collection');
models.Model = require('./models/concrete').Model;

if(typeof global == 'undefined') global = {};

exports.models = global.malt ? global.malt.models : models;
exports.modifiers = modifiers;

if(!global.malt) global.malt = exports;




exports._initModel = function(Model, name, appModels, router)
{

	var AppModel = Model.extend({ router: router, 


		//used for serialization
		name: Model.prototype.name || name,

		//schema for the model
		_schema: new Schema(Model.schema, modifiers),


		/**
		 */

		'newModel': function(type, ops)
		{
			var clazz = this.model(type);

			return new clazz(ops);
		},

		/**
		 */

		'model': function(type)
		{
			var clazz;

			if(this.models)
			{
				clazz = appModels[this.models[type]];
			}
			
			return clazz ? clazz : appModels[type || this.channel];
		}
	});


	appModels[name] = appModels[AppModel.prototype.name]  = AppModel;
}

/**
 */


function _init(router) {
	var hostModels = {};

	for(var name in models)
	{
		var Model = models[name];

		if(!Model.extend) continue;

		exports._initModel(Model, name, hostModels , router);
	}


	router.on('pull malt', function(req, res) {

		req.models = hostModels;

		if(!req.next()) res.end(hostModels);
	});

	router.push('malt', hostModels);


	return router.models = hostModels;   
}

/**
 * connects malt to a server
 */   

exports.plugin = function(router, params)
{                               
	router.on('pull load/*', function() {
		console.log("INIT MALT")
		_init(router);
		this.next();
	});     
}

