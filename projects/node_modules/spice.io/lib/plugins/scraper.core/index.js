var models = require('./models'),
vine = require('vine'),
logger = require('winston').loggers.get('scraper.core');

exports.plugin = function(router)
{
	var scraper = scraper,
	Article;
	
	router.on({
		
		/**
		 */
		
		'push init': function()
		{
			router.request('scraper').success(function(scpr)
			{
				scraper = scpr;
			}).collect();
		},
		
		/**
		 */
		
		'push mongodb': function(db)
		{
			Article = models(db);

			//dump cached
			function dumpArticles() {
				Article.remove({ createdAt: { $lt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 3)}}, function(err, count) {
					
				});

				setTimeout(dumpArticles, 1000 * 60 * 60 * 24);
			}

			dumpArticles();
			
		},
		
		/**
		 */
		
		'pull scrape/article': function(req, res)
		{
			var url = req.query;
			
			//check the DB first
			Article.findOne({ url: url }, function(err, item)
			{
				//serve the cached version
				if(item) {
					logger.verbose('returning cached scraped article');
					return vine.result(item).end(res);
				}
				
				
				scraper.scrapeArticle(url, function(response)
				{
					if(response.error) return vine.error(response.error).end(res);
					
					var art = new Article(response);
					
					art.save(function(err)
					{
						if(err) return vine.error(err).end(res);
						
						vine.result(response).end(res);
					}) 
				});
			})
		}
	})
}