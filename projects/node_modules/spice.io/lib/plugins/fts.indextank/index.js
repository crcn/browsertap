var vine = require('vine'),
	indexTank = require('psk/node/indextank');


exports.plugin = function(router, params) {
	
	var it = indexTank.createClient(params)
	
	
	function getSearchClients() {

		router.request('search/client').
		success(function(client) {

			it.collection(client.name, function(collection) {

				client.init({
					addSearchable: function(data) {


						collection.addDoc({ fields: data }, function(result) {

							// if(err) console.log(err.stack)
							// console.log(err)
						});
					}
				});

				client.search = function(ops, callback)
				{
					/*var search = {
					    "query" : {
					        "terms" : { "feeds" : 'search' }
					    }
					}*/
					
					ops.fetch = '*';
					
					collection.search(ops, function(result)
					{
						callback(result)
					})
					// console.log(ops)
				}
				
			});

		}).collect();
	}
	
	
	function init() {

		setTimeout(getSearchClients, 500);

	}
	
	
	router.on({


		/**
		 */

		'pull -method=GET search/:collection': function(req, res) {

			var c = req.param.collection,
				q = req.query.q,
				page = req.query.page,
				pageSize = req.query.pageSize || indexTank.DEFAULT_PAGE_SIZE;
			
			it.hasCollection(c, function(has) {

				if(!it) return vine.error('Collection %s doesn\'t exist', c).end(es);
				
				if(!q) return vine.error('A query must be present').end(res);
				
				it.collection(c, function(collection) {

					collection.search({q : q, fetch: '*', page: page,  }, function(result) {

						vine.result(result).end(res);

					})
				});
			})
		},

		/**
		 */

		'push mongodb': init
	})
}