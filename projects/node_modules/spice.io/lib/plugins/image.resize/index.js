var request = require('request'),
fs = require('fs'),
step = require('step'),
mime = require('mime'),
im = require('imagemagick'),
outcome = require('outcome'),
logger = require('winston').loggers.get('image.resize'),
sprintf = require('sprintf').sprintf;


exports.plugin = function(router) {


	router.on({

		/**
		 */

		'pull -method=GET -ttl=3600 thumbnail': function(req, res) {

			var _url  = req.query.url,
			_width    = Number(req.query.width),
			_height   = Number(req.query.height)

			if(!_url) throw new Error("Url is not provided");
			if(!_width && !_height) throw new Error("width or height is not provided");


			logger.info(sprintf('resizing image: %s, w: %d', _url, _width));

			var mimeType = mime.lookup(req.query.url); 

			var ext  = mime.extension(mimeType),
			width    = Number(req.query.width),
			tmpImage = '/tmp/tmp-image-' + Date.now() + '.' + ext,
			ws;


			step(

				function() {
					ws = fs.createWriteStream(tmpImage);

					var next = this;

					console.log(tmpImage)

					var r = request(_url);
					r.pipe(ws);
					r.on('end', next);
				},

				function() {

					var ops = {
						srcPath: tmpImage,
						dstPath: tmpImage
					};

					if(_width) ops.width = _width;
					if(_height) ops.height = _height;


					im.resize(ops, this)
				},

				res.success(function() {
					res.header('mime', mimeType)
					fs.createReadStream(tmpImage).pipe(res);

					res.once('end', function() {
						fs.unlink(tmpImage);
					})
				})

			)

		}
	})
}