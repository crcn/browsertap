var Structr = require('structr'),
cashew = require('cashew');
                                                                                                           
module.exports = function(db, params)
{   
	var fieldTypes = {
		'Object': {},
		'String': String,
		'Number': Number,
		'Date': Date
	},
	idGen = cashew.register('profile');                                
	
	var Schema = db.base.Schema,
	ObjectId = Schema.ObjectId;
	
	var fields = { };
	
	for(var fieldName in params.fields)
	{            
		var field = params.fields[fieldName];   
		                            
		 
		fields[fieldName] = { type: fieldTypes[field.type] || {}, index: field.index || false };
	}                       
	               
	var userField = fields[params.usernameField];         
	
	userField.index = { unique: true };
	                             
	//incase accounts are hooked up without a profile, we don't want the app barfing
	userField.default = function()
	{
		return idGen.uid();
	}       
	       
	//incase a user isn't specified - connecting with account before making profile
	fields.password.default = function()
	{
		return idGen.random();
	}
	                      
	
	var Profile = new Schema(Structr.copy(fields, {
		
		createdAt: { type: Date, default: Date.now },
		lastAccessedAt: { type: Date, default: Date.now }
	}), { strict: true });
	


	var Permissions = new Schema({
			
		/**
		 */
		
		name: String,

		/**
		 */

		code: Number
	}, {  strict: true });
                                                     

	return {
		Profile: db.model('profiles', Profile),        
		Permissions: db.model('permissions', Permissions)                         
	}
}
