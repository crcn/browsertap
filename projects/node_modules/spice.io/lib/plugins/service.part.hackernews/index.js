var net = require('psk/node/io/net'),   
Url    = require('url'),
loadRequest = net.loadRequest;



exports.plugin = function(router)
{
	function getSocialService(req, res)
	{          

		//used for converting the time strings to physical datetime representations. Ugh >.> 
		//yes, I could write out the numeric representation, but this just looks cleaner.
		var timeMultipliers = 
		{          
			minute:60
			,minutes:60
			,hour:60*60    
			,hours:60*60  
			,day:60*60*24
			,days:60*60*24
			,month:60*60*24*30
			,months:60*60*24*30
			,year:60*60*24*365
			,years:60*60*24*365
		}          

		var loader = 
		{
			name:'Hacker News'
			,type:'graph'
			,service: new (function()
			{      

				var host = 'http://api.ihackernews.com/';   

				function loadData(uri,callback)
				{
					loadRequest(host+uri,function(data)
					{                          
						try
						{
							callback(JSON.parse(data));   
						}catch(e)
						{
							callback(false);
						}
					})
				}  

				this.loadNewest = function(callback)
				{
					loadData('new',callback)
				}  

				this.loadTop = function(callback)
				{
					feed.load('top',callback);
				}
			}
			)()
			,loaders:
			{
				default:
				{
					posts:
					{
						name:'Posts'                 
						,cache:false //do NOT cache hacker news data because comments, among other things get updated opten      
						,identify:
						[
						{                                 
							//quick add feed for hacker news. 
							test:[/ycombinator\.com/i,
							/hackerne\.ws/i]
							,feed:function(match,callback)
							{
								callback(false, {});
							}
						} 
						]
						,renderData:function(data)
						{
							var posted = data.postedAgo.toLowerCase().split(' ');

							//get the first digit
							var time 	   = Number(posted[0]);          

							//get the time hours / minutes / days / months / years
							var multiplier = timeMultipliers[posted[1]]; 
							var createdAt  = new Date();    


							//set the time
							createdAt.setTime(createdAt.getTime()-time*multiplier*1000);


							var url = data.url,
							commentsLink = 'http://news.ycombinator.com/item?id='+data.id;

							if(url && url.indexOf('://') == -1)
							{
								url = commentsLink;
							}


	                        return {label:data.title,
								    text:'',         
							   		type:'article',
									link:url,   
									id:data.id,
									commentsLink:commentsLink,
									points:1,
									createdAt:createdAt,
									postedBy:data.postedBy};

						} 
						,load: function(data,callback)
						{                        
							this.service.loadNewest(function(data)
							{                           
								callback(false,data ? data.items : null);     
							})
						}
					}	
				}
			}
		}

		res.end(loader)
	}
	
	function getPromotionFinder(req, res)
	{
		res.end({
			service:'hackernews'
			,test:function(item)
			{
				return item.service == 'test';
			}
			,find:function(link,callback)
			{
				loadRequest('http://graph.facebook.com/'+link,function(data)
				{
					try
					{
						var result = JSON.parse(data);
						callback(result.shares);

					}
					catch(e)
					{
						callback(null);
					}
				});
			}
		})
	}
	
	router.on({
		'collect social/service': getSocialService,
		'collect promotion/finder': getPromotionFinder
	})
}

