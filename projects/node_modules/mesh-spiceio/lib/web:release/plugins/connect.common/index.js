var models = require('malt').models,
logger = require('mesh-winston').loggers.get('leche.spice.io');


models.Account = models.Item.extend({

	/**
	 */

	'path': '/accounts'
});

models.Profile = models.Item.extend({

	/**
	 */

	'path': '/profile',

	/**
	 */

	'accounts': function()
	{
		return this.collection('/accounts', this.model('Account') );
	},

	/**
	 */

	'generateToken': function(scope, callback)
	{

		this.router.request('/profile/authorize/' + (scope instanceof Array ? scope.join(',') : scope )).success(function(response) 
		{
			callback(false, response.result.accessToken);
		}).pull();
	},
	
	/**
	 */
	
	'validate': function(callback)
	{
		this.load(callback);
	}
});



exports.plugin = function(router)
{

	var profile;
	
	router.on({
		
		/**
		 */


		'pull session -> validate/login': function(req, res, mw)
		{
			logger.debug('validate login');



			function fail()
			{
				res.header({ redirect: '/login?redirect_to=' + req.headers.url }).end();
			}

			//no profile? executing SSJS (FIXME: holy shit this shouldn't be here. Confusing.)
			if(!profile)
			{
				if(!req.session) return fail();

				var prof = new router.models.Profile({ accessToken: req.session.data.accessToken });

				//load the profile to validate the user's logged in
				prof.load(function()
				{
					//no profile id? user's not logged in, so redirect to the login page.
					if(!prof.doc._id) return fail();

					req.profile = prof;

					//otherwise, continue!
					mw.next();
				})
				return;
			}	

			logger.debug('profile exists, nexting')

			req.profile = profile;

			//no problemo? continue.
			mw.next();
		},

		/**
		 */

		'pull -http -mixed session -> home -> connected/:serviceName': function(req, res, mw)
		{ 
			if(typeof window == 'undefined')
			{
				request.session.data.accessToken = request.query.accessToken;
			}
			else
			{
				router.push('rawProfile', { profile: req.query });


				if(window.opener)
				{

					window.opener.authorizedConnect(request.query);
					window.close();
				}
			}

			return req.view;
		},
        
        
		/**
		 */

		'pull -public -mixed session -> home -> disconnect': function(req, res, next)
		{
            if(typeof window == 'undefined')
			{
				req.session.data.accessToken = req.query.accessToken;
			}
            else
            {
                var loggedOutProfile = profile;
                profile = null;
                router.push('store', { path: 'store/profile', data: null });
            }

			
            if(!req.next()) return req.view;
		},


		/**
		 */

		'push -pull store/profile': function(prof)
		{
			profile = prof;
			
			//data that's added on every request
			router.push('hooks/sticky/data', { accessToken: profile ? profile.get('accessToken') : null });
		}
	})
}