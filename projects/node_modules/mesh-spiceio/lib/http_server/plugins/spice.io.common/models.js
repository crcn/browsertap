var malt = require('malt'),
models = malt.models;


models.StreamItem = models.Item.extend({
				
    /**
     */

    //'path': '/articles',

    /**
     */


    'override __construct': function(ops)
    {
        this._super(ops);
    },


    /**
     */

    'images': function()
    {
        if(this.__images) return this.__images;

        var images = this._filterMeta('image');

        if(images.length)
        {
            // var im =  images[0].regular;
            this.doc.coverImage = images[0].link;
			
            //this.doc.coverImageHeight = Math.floor(im.height * ( 250 / im.width)); 
        }

        return images;
    },

    /**
     */

    'urls': function()
    {
        return this._filterMeta('url');
    },

    /**
     */

    'videos': function()
    {
        return this._filterMeta('video');
    },

    /**
     */

    'show': function()
    {
        // console.log("SHOW!");
    },

    /**
     */

    '_filterMeta': function(type)
    {
        if(this['__' + type]) return this['__' + type];

        var filtered = [],
		media = this.doc.media || this.doc.metadata;
		

        if(media)
        for(var i = media.length; i--;)
        {
            var md = media[i];

            if(md.type == type) filtered.unshift(md);
        }

        return this['__' + type] = filtered;
    }
});


/*models.SavedItem = models.StreamItem.extend({
   
    
    'path': '/saved'
     
});*/



models.Stream = models.Collection.extend({
    
    /**
     */

    'models': {
        'article': 'StreamItem',
        'video': 'StreamItem',	
        'post': 'StreamItem'
    },
                   
    /**
     */

    'override __construct': function(uri)
    {
        this._super({});

        this.path = uri;
    }
});       
       

models.Recipient = models.Item.extend({
	
});       

models.GroupSchedule = models.Item.extend({
   
   /**
    */

   'override __construct': function(group)
   {
        this._super();
       this._group = group;
       this.path = '/groups/'+ group.get('_id') + '/subscribers/info';
   },

   /**
    */

   'getCronTime': function(callback)
   {
       var self = this;

       this.load(function() 
       {
        callback(false, self.doc.cron);
       });
   },

   /**
    */

   '_path': function()
   {
       return this.path;
   }
    
     
});


models.Group = models.Item.extend({
             
    /**
     */
	
	'path': '/groups',
 			
	/**
     */

    /*'override __construct': function(subject)
    {
		var tos = typeof subject;
		
        this._super(tos == 'object' ? subject : { });

        this.path = (tos == 'string' ? tos : '/my' ) + '/groups';
    },*/

    /**
     */

    'children': function()
    {
        return this.collection('groups', this.__construct);
    },

    /**
     */

    'feeds': function()
    {
        return this.collection('feeds', this.model('Feed'));
    },   

	/**
	 */
	
	'subscribers': function()
	{
		return this.collection('subscribers', this.model('Recipient'));
	},

    /**
     */

    'loader': function()
    {
        return this._loader || (this._loader = this.newModel('Stream', '/new/' + this.get('_id')));	
    },   

	/**
	 */
	
	'saved': function()
	{     
		//return this.collection('articles', this.model('Stream'));
		return this._loader || (this._loader = this.newModel('Stream', '/groups/' + this.get('_id') + '/articles'));
	},

    /**
     */

    'edit': function()
    {
        this.router.push('redirect', 'my/scenes/' + this.get('_id') + '/edit');
    },

    /**
     */

    'show': function()
    {
        this.router.push('redirect', 'scenes/' + this.get('publicName'));
    },

    /**
     */

    'schedule': function()
    {
        return this._schedule || (this._schedule = this.newModel('GroupSchedule', this));
    }
});


models.Feed = models.Item.extend({


    'explicit value': {
        get: function()
        {
            return this.doc.data ? this.doc.data.q || this.doc.data.url : null;
        },
        set: function(v)
        {
            if(!this.doc.data) return;

            if(this.doc.data.q) this.doc.data.q = v;
            if(this.doc.data.url) this.doc.data.url = v;
        }
    }
    
});

exports.init = function()
{
    models.Profile = models.Profile.extend({

        /**
         */

        'scenes': function()
        {

            return this.collection('/my/groups', this.model('Group'), { type: 'scene' });
        }
    });
}