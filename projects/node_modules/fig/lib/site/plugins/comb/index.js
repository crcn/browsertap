var logger = require('mesh-winston').loggers.get('element.core'),
sprintf = require('sprintf').sprintf;


function findAnchor(node) {
	var current = node;
	while(current && !$(current).is("a")) {
		current = current.parentNode;
	}
	return current;
}

exports.plugin = function(router) {


	//listen for ALL anchor link clicks
	$(document).bind('click', function(event) {

		//item could be wrapped around an anchor (image, div) - find it. 
		var anchor = findAnchor(event.target);

		if(!anchor) return;

		var href = String(anchor.href); 

		//is the link pointing to something outside of the domain? don't handle!
		if(href.indexOf(window.location.host) == -1) return;

		//need to remove the host info if it exists
		href = href.indexOf('://') > -1 ? href.split('/').slice(3).join('/') : href;

		//if a keyboard modifier is selected, such as cmd for new tab, then ignore
		if(event.altKey || event.shiftKey || event.metaKey || event.ctrlKey || !router.request(href).type('pull').hasListeners()) return;

		logger.verbose(sprintf('clicked link "%s" is handleable - redirecting', href));
		
		//otherwise, prevent the user from redirecting, and handle the request in-app
		event.preventDefault();

		//IF the anchor link is the same as the location, we can assume a hash tag was provided  
		if(String(anchor.href) == String(window.location)) {

			logger.verbose('URI is the same, ignoring link click');
			return;

		}
		
		//redirect in app!
		router.push('redirect', href);
		
	});

}