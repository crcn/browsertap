var Structr = require('structr'),
models = require('./models');


module.exports = function(db)
{	
	var model = this.model = models(db).CachedFeedModel;
	var c_feeds = model.collection,
	pullersByAuth = {},
	pullersByType = {};


	this.addPuller = function(puller)
	{
		if(!pullersByAuth[puller.service]) pullersByAuth[puller.service] = [];

		//google
		pullersByAuth[puller.service].push(puller);

		//youtube, reader
		pullersByType[puller.type] = puller;
	}

	this.collection = c_feeds;

	this.find = function(search, ops, callback)
	{
		if(!ops.page) ops.page = 0;
		if(!ops.count) ops.count = 100;


		c_feeds.find(search, { skip: ops.page * ops.count, limit: ops.count }, callback);
	}

	this.subscribe = function(accounts, feeds, callback)
	{
		for(var type in pullers)
		{
			
		}
	}

	this.unsubscribe = function(account, feed, callback)
	{
		var puller = pullersByType[feed.type];

		if(!puller) return callback ? callback() : null;
		
		puller.unsubscribe(account, feed, function(err, result)
		{
			console.log('Removing feed');

			feed.remove(true, callback);
		});	
		
	}

	this.load = function(account, callback)
	{
		var pullers = pullersByAuth[account.type];

		if(!pullers) return callback ? callback() : null;


		pullers.forEach(function(puller)
		{
			c_feeds.remove({ account: account._id.toString(), type: puller.type }, function()
			{
				puller.load(account, {
					add: function(feeds)
					{
						for(var i = feeds.length; i--;)
						{
							var feed = feeds[i];


							//TODO: details may include profile info, site info. basically, outside profile information
							//to notify what the hell the user's signed up with. this should however be with social.profile.core....
							if(feed.details) delete feed.details;

							feed.account = account._id.toString();
							feed.auth = account.type;
							feed.type = puller.type;

							if(!feed.feedId) feed.feedId = feed.feed;
						}


						c_feeds.insert(feeds, function(){ });
					},
					finish: function(feeds)
					{
						if(feeds) this.add(feeds);

						if(callback) callback();
					}
				})
			});
		});

		
	}
}
