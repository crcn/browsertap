var models = require('./models'),
vine = require('vine'),
logger = require('winston').loggers.get('groups.part.feeds'),
sprintf = require('sprintf').sprintf;

exports.plugin = function(router) {

	var delegate,
	Model,
	WATCH_TTL = 1000 * 3600 * 24 * 365 * 1000;//1000 years

	router.on({
		
		/**
		 */

		'collect feeder': function(req, res) {
                     
			
			res.end({

				priority: 1,
				test: function(ops) {

					logger.verbose(sprintf('testing %s as group', ops.feed));

					return ops.feed && ops.feed.length == 24;
				},
				feeds: function(ops, on) {
					Model.find({ group: ops.feed }, on);
				}
			});	
		},

		/**
		 */

		'push mongodb': function(db) {

			Model = models(db);
		}
	});

	
	router.on({
		
		/**!
	     * Returns groups stored in the given group
	 	 * @collection group feeds   
	     * @displayName getAllGroupFeeds
		 */

		'pull \
		-hook -method=GET \
		groups/:group/id -> \
			groups/:group/feeds': function(req, res) {

			var q = { group: req.groupId };

			Model.find(q, function(err, items) {

				vine.list(items).end(res);
			});
		},

		/**!
		 * Returns the target group feed
	 	 * @collection group feeds       
	     * @displayName getGroupFeed
		 */

		'pull \
		-hook -method=GET \
		groups/:groupId/feeds/:feedId OR \
		feeds/:feedId': function(req, res, mw) {

			Model.findOne({ _id: req.params.feedId } , function(err, item) {

				req.feed = item;

				if(!mw.next()) vine.list(item).end(res);
			});
		},

		/**
		 * Validates whether the user owns this group 
		 */

		'pull \
		-hook -perm -method=GET \
			feeds/:feedId -> \
				groups/:groupId/feeds/:feedId/validate': function(req, res, mw) {
                       
			if(req.feed && req.group && req.group._id.toString() == req.feed.group) {

				if(!mw.next()) vine.message('You own this feed').end(res);
			}
			else {

				vine.error('you don\'t own this feed').end(res);
			}
		},

		/**
		 * Removes any feed duplicates. TODO: have the feed id = groupid+feedId    
		 */

		'pull \
		-hook -perm -method=GET \
			feed/identify -> \
				groups/:groupId/feeds/remove/duplicates': function(req, res, mw) {

			var nLeft = req.identifiedFeeds.length,
			groupId = req.group._id.toString();   
			                    

			req.identifiedFeeds.forEach(function(feed) {

				Model.findOne({ group: groupId, feedId: feed.feedId }, function(err, item) {

					if(item) req.identifiedFeeds.splice(req.identifiedFeeds.indexOf(feed), 1);

					if(!(--nLeft)) {

						if(!req.identifiedFeeds.length || !mw.next()) return vine.list(req.identifiedFeeds).end(res);
					}
				});
			})
		},

		/**!
		 * Adds a feed to the given group. 
		 * @optional feed the feed to try and identify, and use. Could be a url, twitter hash tag, etc.
		 * @optional service the service: twitter, facebook, google
		 * @optional category the service category: photos, default.
		 * @optional action the service action: search, upload, post, etc.
		 * @optional data the data for the group: url, q, etc.
		 * @collection group feeds      
		 * @displayName addGroupFeed 
		 */

		'pull \
		-hook -perm -method=POST \
		parse/body -> \
			groups/:groupId/feeds/remove/duplicates -> \
				groups/:groupId/feeds OR \
				groups/:groupId/feeds/create': function(req, res) {
   
			console.log('adding feeds');                 
			
			var nLeft = req.identifiedFeeds.length,
			feeds = [],
			groupId = req.group._id.toString();        
			                       

			req.identifiedFeeds.forEach(function(feed) {

				var m = new Model({
					group: groupId,
					action: feed.action,
					category: feed.category,
					service: feed.service,
					feedId: feed.feedId,
					data: feed.data
				});

				feeds.push(m);

				m.save(function() {

					if(!(--nLeft)) {

						vine.add(feeds).end(res);
					}
				});

				router.push('watch/feed', { feedId: feed.feedId, ttl: WATCH_TTL });
			});
		},

		/**!
		 * Updates  the given group
		 * @optional service the service: twitter, facebook, google
		 * @optional category the service category: photos, default.
		 * @optional action the service action: search, upload, post, etc.
		 * @collection group feeds     
		 * @displayName updateGroupFeed
		 */

		'pull \
		-hook -perm -method=PUT \
		groups/:groupId/feeds/:feedId/validate -> \
			groups/:groupId/feeds/:feedId OR \
			groups/:groupId/feeds OR \
			groups/:groupId/feeds/:feedId/save': function(req, res) {

			var fd = req.feed;

			for(var prop in fd.schema.paths) {

				if(req.query[prop]) fd[prop] = req.query[prop];
			}

			fd.save(function() {

				vine.update(fd).end(res);
			});

		},

		/**!
		 * Removes a feed from the target group
		 * @collection group feeds  
		 * @displayName removeGroupFeed
		 */

		'pull \
		-hook -method=DELETE \
		groups/:groupId/feeds/:feedId/validate -> \
			groups/:groupId/feeds OR \
			groups/:groupId/feeds/:feedId OR \
			groups/:groupId/feeds/:feedId/remove': function(req, res) {

			req.feed.remove(function() {

				vine.remove(req.feed).end(res);
			});


			//no groups watching the feed? remove.
			Model.findOne({ feedId: req.feed.feedId }, function(err, item) {

				if(!item) router.push('unwatch/feed', { feedId: req.feed.feedId });
			})
		}
	});
}