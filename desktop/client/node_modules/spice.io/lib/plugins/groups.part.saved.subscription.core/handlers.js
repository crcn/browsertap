var Structr = require('structr'),
vine = require('vine');

module.exports = Structr({
	
	/**
	 */

	'__construct': function(router)
	{
		this._handlers = {};
		this._router = router;
	},

	/**
	 */

	'add': function(handler)
	{
		this._handlers[handler.type] = handler;
	},

	/**
	 */
	
	'get': function(type)
	{
		return this._handlers[type];
	},

	/**
	 */

	'notify': function(subscriber, callback)
	{
		var handler = this._handlers[subscriber.type],
		search = { count: handler.limit || 1 };

		if(subscriber.lastSentAt) search.afterDate = subscriber.lastSentAt;

		handler.notify(subscriber, function(err, result)
		{
			callback();
		});
	},

	/**
	 */

	'validate': function(data, callback)
	{
		var subscriber = {

			//type of subscriber
			type: data.type,

			//time function - when to send the subscription
			cron: data.cron,

			//value of the subscriber: user id, email address, etc,
			value: data.value
		},

		handler = this.get(subscriber.type);

		if(!subscriber.value) return callback(vine.error('Value for subscriber must exist').end());
		if(!handler) return callback(vine.error('Subscriber type %s does not exist', subscriber.type).end());

		function onSuccess()
		{
			callback(vine.result(subscriber).end());
		}

		//time info 
		subscriber.cron = subscriber.cron || handler.cron;

		if(handler.validate)
		{
			handler.validate(subscriber, function(err)
			{
				if(err) return callback(vine.error(err).end());

				onSuccess();
			});
		}
		else
		{	
			onSuccess();
		}
	}
})