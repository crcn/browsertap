var dbManager = require('./db/manager'),
	vine = require('vine');


exports.plugin = function(mediator)
{
	var delegates,
		commentsDelegate;
		
	function getCommentsHandler()
	{
		mediator.pull('comments/handler', commentsDelegate.registerCommentsHandler);
	}
	
	function onMongodb(db)
	{
		delegates = dbManager.delegates(db);
		commentsDelegate = delegates.commentsDelegate;
			
		setTimeout(getCommentsHandler, 500)
	}

	function initMaster()
	{
		
		mediator.on({
			
			/**!
			 */

			'pull -http social/validate/login -> (add/comment/:type/:target OR add/comment/:type)': function(req, res) {
				//the type of item, article, or comment
				var type = req.params.type,
				
					//the id of the particular item from either the article, or comment DB. Could also be a url
					target   = this.data('target'),
					
					//text for content
					text = req.query.text,	
					
					//user who made comment
					user = req.profile;
					
					
				commentsDelegate.addComment(user, target, type, text, function(item) {

					vine.result(item).end(res);

				});
			},

			/**
			 */

			'pull -http /comments/:type/:targetId OR /:sortBy/comments/:type/:targetId': function(req, res) {

				var targetId   = req.params.targetId,
						type   = req.params.type,
						sortBy = req.query.sortBy || 'new';
						
				commentsDelegate.getComments(targetId, type, sortBy, function(comments) {
					
					var cleanComments = [];
					
					(comments || []).forEach(function(c) {

						cleanComments.push(c.doc);

					})
					
					vine.api().result(cleanComments).end(res);
				});
			},

			/**
			 */

			'pull -http /social/validate/login -> /remove/comment/:commentId': function(req, res, mw) {

				var commentId = mw.data('commentId'),
				user = req.profile._id;
				
				commentsDelegate.removeComment(user, commentId, function(comment) {

					vine.api().message('Success').end(res);

				});
			},


			/**
			 */

			'pull -http /social/validate/login -> /upvote/comment/:commentId': function(req, res)
			{
				var commentId = req.params.commentId,
					user =req.profile._id;
				
				commentsDelegate.upvoteComment(user, commentId, function(comment) {

					vine.api().message('Success').end(res);

				});
			},

			/**
			 */

			'pull -http /social/validate/account -> /downvote/comment/:commentId': function(req, res)
			{
				var commentId = req.params.commentId,
					user = req.profile._id;
				
				commentsDelegate.downvoteComment(user, commentId, function(comment) {

					vine.api(request).message('Success').end(res);

				});
			}

			
		})
	}
	
	
	mediator.on({


		/**
		 */

		'push init/master': initMaster,

		/**
		 */

		'push mongodb': onMongodb
	});
}