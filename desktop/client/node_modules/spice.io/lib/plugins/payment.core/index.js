var handlers = require('./handlers'),
	PaymentHandlers = handlers.PaymentHandlers,
	vine = require('vine'),
	Queue = require('sk/core/queue').Queue;


exports.plugin = function(mediator)
{
	var ph;
	
	function init()
	{
		ph = new PaymentHandlers(mediator);
	}

	return;
	
	
	mediator.on({

		/**
		 */

		'push init': init,

		/**
		 */

		'pull -http pay/:service': function(request)
		{
			function onData()
			{
				/*console.log("PAID")
				console.log(request.data);
				vine.api(request).result('yes').send();*/
				ph.handlePayment(request.data, function(err, data)
				{
					if(err) return vine.api(request).error('Unable to process payment').send();
					
					request.end(JSON.stringify(data));
				});
			}
			
			onData();
		},

		/**
		 */

		'pull -http payment/:service/:category': function(request)
		{			
			ph.getPayments(request.data, function(err, data)
			{
				
			});
		},

		/**
		 */

		'pull -http item/prices': function(request)
		{
			ph.getPrices(function(data)
			{
				vine.api(request).result(data).send();
			});
		},

		/**
		 */

		'pull -http social/validate/login -> payment/balance/:service': function(request)
		{
			var profile = request.profile;
						
			ph.getPaymentBalance(profile._id, function( data)
			{
				vine.api(request).result(data || 0).send();
			});
		}
	});
}