var im = require('imagemagick'),
http = require('http'),
fs = require('fs'),
Url = require('url'),
crypto = require('crypto');


module.exports = function(url, callback)
{

	var urlParts = Url.parse(url);

	var options = {
		host: urlParts.host,
		port: 80,
		path: urlParts.pathname + (urlParts.search || ''),
	};	

	http.get(options, function(res) {
		
		//follow redirects
		if(res.statusCode > 299 && res.statusCode < 308 && url != res.headers.location) return module.exports(res.headers.location, callback);
		 
		res.setEncoding('binary');
		 
		
		var contentType = res.headers['content-type'],
			fileType;
		
		
		//unusual, but it DOES happen. AWS does this...
		if(contentType) 
		{
			fileType = contentType.match(/\/(\w+)/);

			if(!fileType) return callback(null);

			fileType = fileType[1];
		}
		else
		{
			fileType = urlParts.pathname.split('.').pop().match(/\w+/);
			
			
			if(fileType)
			{
				fileType = fileType[0];
			}
			else
			{
				// return callback(null);
				fileType = 'tmp';
			} 
			
		} 
		
		var tmpdir = '/tmp/image-sizing',
		name   = crypto.createHash("md5").update(url).digest('hex') + '.' + new Date().getTime() + '.' + fileType,
		outputPath = tmpdir + '/' + name;
		
		try
		{
			fs.mkdirSync(tmpdir, 0777);
		}
		catch(e)
		{
			// console.log(e.stack)
		}
		
		try
		{
			var ws = fs.createWriteStream(outputPath, {flags: 'w+'});

			res.on('data', function(data)
			{
				ws.write(data,'binary');
			});

			res.on('end', function()
			{

				var t = new Date().getTime();

				
				
				im.identify(outputPath, function(err, result)
				{
					if(err) console.error(err.message);
					
					try
					{
						fs.unlinkSync(outputPath);
					}
					catch(e)
					{
						
					}
					
					callback(result);
				})
			});
		}
		catch(e)
		{
			console.error(e.stack)
			callback(null);
		}

	}).on('error', function(e) {
		callback(null)
	});
}
