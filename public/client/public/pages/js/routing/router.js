// Generated by CoffeeScript 1.6.3
define(["hasher", "crossroads", "mojojs", "events"], function(hasher, crossroads, mojo, events) {
  var em, models, onHashChange, redirect, routesByName, wrapRoute;
  em = new events.EventEmitter();
  models = mojo.models;
  routesByName = {};
  redirect = function(paths) {
    var name, _results;
    _results = [];
    for (name in paths) {
      _results.push(models.set("states." + name, paths[name]));
      {
        console.log("model states %s=%s", name, paths[name])
      }

    }
    return _results;
  };
  onHashChange = function(newHash, oldHash) {
    {
      console.log("http redirect %s", newHash)
    }

    return crossroads.parse(newHash.substr(1));
  };
  hasher.changed.add(onHashChange);
  hasher.initialized.add(onHashChange);
  wrapRoute = function(pre, route) {
    return function() {
      return pre(function(err) {
        if (err) {
          return;
        }
        return redirect(route);
      });
    };
  };
  return {
    getPath: function(name) {
      return routesByName[name] || name;
    },
    addRoutes: function(routes) {
      var cb, route, routeInfo;
      for (route in routes) {
        routeInfo = routes[route];
        routesByName[routeInfo.name] = route;
        if (!routeInfo.pre) {
          routeInfo.pre = function(next) {
            return next();
          };
        }
        if (routeInfo.states) {
          cb = wrapRoute(routeInfo.pre, routeInfo.states);
        } else {
          cb = routeInfo.enter;
        }
        crossroads.addRoute(route, cb);
      }
      return this;
    },
    init: function() {
      return hasher.init();
    }
  };
});

