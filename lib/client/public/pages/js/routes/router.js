// Generated by CoffeeScript 1.6.3
var crossroads, em, events, hasher, models, mojo, onHashChange, redirect, routesByName, wrapRoute;

hasher = require("hasher");

crossroads = require("crossroads");

mojo = require("mojojs");

events = require("events");

em = new events.EventEmitter();

models = mojo.models;

routesByName = {};

redirect = function(paths) {
  return models.set("states", paths);
};

onHashChange = function(newHash, oldHash) {
  /*debug
    console.log("http redirect %s", newHash)
  */

  return crossroads.parse(newHash.substr(1));
};

hasher.changed.add(onHashChange);

hasher.initialized.add(onHashChange);

wrapRoute = function(pre, route) {
  return function() {
    return pre(function(err) {
      if (err) {
        return;
      }
      return redirect(route);
    });
  };
};

module.exports = {
  getPath: function(name) {
    return routesByName[name] || name;
  },
  addRoutes: function(routes) {
    var cb, route, routeInfo;
    for (route in routes) {
      routeInfo = routes[route];
      routesByName[routeInfo.name] = route;
      if (!routeInfo.pre) {
        routeInfo.pre = function(next) {
          return next();
        };
      }
      if (routeInfo.states) {
        cb = wrapRoute(routeInfo.pre, routeInfo.states);
      } else {
        cb = routeInfo.enter;
      }
      crossroads.addRoute(route, cb);
    }
    return this;
  },
  init: function() {
    return hasher.init();
  }
};
