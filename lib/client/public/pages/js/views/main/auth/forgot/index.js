// Generated by CoffeeScript 1.6.3
var ForgotView, mojo, _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

mojo = require("mojojs");

ForgotView = (function(_super) {
  __extends(ForgotView, _super);

  function ForgotView() {
    this.reset = __bind(this.reset, this);
    _ref = ForgotView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  /*
  */


  ForgotView.prototype.define = ["resetRequest", "loading", "error", "success"];

  /*
  */


  ForgotView.prototype.paper = require("./index.pc");

  /*
  */


  ForgotView.prototype.bindings = {
    "resetRequest.loading": "loading",
    "resetRequest.success": "success",
    "resetRequest.error": "error"
  };

  /*
  */


  ForgotView.prototype.reset = function() {
    return this.set("resetRequest", mojo.mediator.execute("resetPassword", this.get("user").context()));
  };

  return ForgotView;

})(mojo.View);

module.exports = ForgotView;

